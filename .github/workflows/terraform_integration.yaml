name: Terraform CI - Integration

on:
  pull_request:
  push:
    branches:
      - main
      - 'rc-*'

jobs:
  tf_integration:
    name: 'Terraform integration (on tf ${{ matrix.terraform_version }})'
    runs-on: ubuntu-latest
    environment: integration
    strategy:
      matrix:
        # TODO run just one version by now
        # terraform_version: [ '~1.4.0', '~1.5.0', '~1.6.0', '~1.7.0', 'latest' ] # haven't seen < 1.4 in the wild, so limit for sanity
        terraform_version: [ 'latest' ]
    permissions:
      contents: 'read'
      id-token: 'write'
    env:
      CI_SA_EMAIL: gh-actions-tf-azure-export@psoxy-dev-david.iam.gserviceaccount.com
      GCP_IDENTITY_POOL: 'projects/553087959349/locations/global/workloadIdentityPools/github/providers/tf-azure-worklytics-export'
      EXAMPLE_TENANT_SA_EMAIL: ci-terraform-github-azure@psoxy-dev-david.iam.gserviceaccount.com
      EXAMPLE_TENANT_SA_ID: '116863361842113328137'
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      AZURE_STORAGE_ACCOUNT: 'dataexportfederation'
      AZURE_RESOURCE_GROUP: 'worklytics-david'
    steps:
      - name: Get timestamp
        id: timestamp
        run: |
          echo "timestamp=$(date  +%Y%m%d'T'%H%M%S)" >> $GITHUB_ENV

      - name: Check out code
        uses: actions/checkout@v4

      - name: 'setup Terraform'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ matrix.terraform_version }}
          terraform_wrapper: false

      - id: auth_gcp
        name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.GCP_IDENTITY_POOL }}
          service_account: ${{ env.CI_SA_EMAIL }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          version: '>= 363.0.0'

      - id: auth_azure
        name: 'Azure login'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Install Azure CLI, for upload-blob.sh script'
        uses: elstudio/action-install-azure-cli@v1

      - id: terraform_apply
        name: 'Terraform - integration test examples/basic apply'
        working-directory: examples/basic
        run: |
          RESOURCE_PREFIX=ci-worklytics-$(echo -n "${{ matrix.terraform_version }}_${{ env.timestamp}}" | sha1sum | cut -c1-12)
          terraform init
          terraform apply -auto-approve \
            -var="resource_name_prefix=${RESOURCE_PREFIX}" \
            -var="worklytics_tenant_id=${{ env.EXAMPLE_TENANT_SA_ID }}" \
            -var="azure_tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
            -var="storage_account_name=${{ env.AZURE_STORAGE_ACCOUNT }}" \
            -var="resource_group_name=${{ env.AZURE_RESOURCE_GROUP }}"

      - id: terraform_integration
        name: 'Terraform - integration test examples/basic upload blob'
        run: |
          chmod +x $GITHUB_WORKSPACE/test/upload-blob.sh
          $GITHUB_WORKSPACE/test/upload-blob.sh ${{ env.EXAMPLE_TENANT_SA_EMAIL }} \
            ${{ secrets.AZURE_TENANT_ID }} \
            ${{ steps.terraform_apply.outputs.worklytics_export_app_client_id }} \
            ${{ secrets.AZURE_SUBSCRIPTION_ID }} \
            ${{ env.AZURE_RESOURCE_GROUP }} \
            ${{ env.AZURE_STORAGE_ACCOUNT }} \
            ${{ steps.terraform_apply.outputs.worklytics_export_container }}

      - id: terraform_destroy
        name: 'Terraform - integration test examples/basic destroy'
        if: always() # try to force this to ALWAYS happen, no matter if previous stuff failed
        working-directory: examples/basic
        run: |
          terraform destroy -auto-approve \
            -var="resource_name_prefix=${RESOURCE_PREFIX}" \
            -var="worklytics_tenant_id=${{ env.EXAMPLE_TENANT_SA_ID }}" \
            -var="azure_tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
            -var="storage_account_name=${{ env.AZURE_STORAGE_ACCOUNT }}" \
            -var="resource_group_name=${{ env.AZURE_RESOURCE_GROUP }}"
