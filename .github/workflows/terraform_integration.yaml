name: Terraform CI - Integration

on:
  pull_request:
  push:
    branches:
      - main
      - 'rc-*'

jobs:
  tf_integration:
    name: 'Terraform integration (on tf ${{ matrix.terraform_version }})'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # TODO run just one version by now
        # terraform_version: [ '~1.4.0', '~1.5.0', '~1.6.0', '~1.7.0', 'latest' ] # haven't seen < 1.4 in the wild, so limit for sanity
        terraform_version: [ 'latest' ]
    permissions:
      contents: 'read'
      id-token: 'write'
    env:
      CI_SA_EMAIL: gh-actions-tf-azure-export@psoxy-dev-david.iam.gserviceaccount.com
      GCP_IDENTITY_POOL: 'projects/553087959349/locations/global/workloadIdentityPools/github/providers/tf-azure-worklytics-export'
      EXAMPLE_TENANT_SA_EMAIL: ci-terraform-github-azure@psoxy-dev-david.iam.gserviceaccount.com
      EXAMPLE_TENANT_SA_ID: '116863361842113328137'
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Get timestamp
        id: timestamp
        run: |
          echo "timestamp=$(date  +%Y%m%d'T'%H%M%S)" >> $GITHUB_ENV

      - name: Check out code
        uses: actions/checkout@v4

      - name: 'setup Terraform'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ matrix.terraform_version }}
          terraform_wrapper: false

      - id: 'auth-gcp'
        name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.GCP_IDENTITY_POOL }}
          service_account: ${{ env.CI_SA_EMAIL }}

      # grant CI_SA permissions to impersonate in EXAMPLE_TENANT_SA
      - name: 'GCP test workload auth'
        run: |
          ID_TOKEN=`gcloud auth print-identity-token --impersonate-service-account ${{ env.EXAMPLE_TENANT_SA_EMAIL }}`
          {
              echo 'JSON_RESPONSE<<EOF'
              curl "https://oauth2.googleapis.com/tokeninfo?id_token=$ID_TOKEN"
              echo EOF
          } >> "$GITHUB_ENV"

